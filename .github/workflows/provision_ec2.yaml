name: Provision t2.micro EC2

on: 
  push:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        default: 'App Server'
        type: string
        paths:
        - 'tf-example/**'

concurrency:
  group: ${{ github.action == 'Provision t2.micro EC2' }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ./tf-example

jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-region: us-west-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Apply
        id:   apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
  slack_notification:
    name: 'Slack Notification'
    runs-on: ubuntu-latest
    if: always()

    steps:
    - uses: actions/checkout@v2

    - name: Apply Slack Notification
      uses: rtCamp/action-slack-notify@v2
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        SLACK_CHANNEL: captain-alert
        SLACK_TITLE: ${{ github.repository }}
        SLACK_MESSAGE: ${{ github.event.head_commit.message }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: 'Terraform Github Actions Main Branch Alert'

    - name: Plan Slack Notification
      uses: rtCamp/action-slack-notify@v2
      if: github.ref != 'refs/heads/main' && github.event_name == 'push'
      env:
        SLACK_CHANNEL: captain-alert
        SLACK_TITLE: ${{ github.repository }}
        SLACK_MESSAGE: ${{ github.event.head_commit.message }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: 'Terraform Github Actions Feature Branch Push Alert'
